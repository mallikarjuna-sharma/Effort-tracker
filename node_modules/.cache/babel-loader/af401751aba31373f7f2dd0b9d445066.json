{"ast":null,"code":"var _jsxFileName = \"/Users/mallik/projects/Effort-tracker/src/UpdateRecordPopup.js\";\nimport React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Dialog, Slide } from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Typography, Grid, TextField } from \"@material-ui/core\";\nimport stringConstants from \"./stringConstants.jsx\";\nimport useStyles from \"./styles.jsx\";\nimport { loginUser } from \"./service.js\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nconst useStylesselect = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, children), onClose ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\n\nfunction UpdateRecordPopup(props) {\n  const classesSelect = useStylesselect();\n  const {\n    editRowId: fieldValues,\n    open,\n    setOpen,\n    setEditRowId,\n    handleAddUpdate\n  } = props;\n  const [effortId, seteffortId] = React.useState(fieldValues ? fieldValues[\"id\"] : \"\");\n  const [effort, seteffort] = React.useState(fieldValues ? fieldValues[\"effort\"] : \"\");\n  const [description, setdescription] = React.useState(fieldValues ? fieldValues[\"description\"] : \"\");\n  const [activityType, setactivityType] = React.useState(fieldValues ? fieldValues[\"activityType\"] : \"core\");\n  const [serviceElement, setserviceElement] = React.useState(fieldValues ? fieldValues[\"serviceElement\"] : \"Change Management\");\n  const [assyst, setassyst] = React.useState(fieldValues ? fieldValues[\"assyst\"] : \"\");\n  const [errorfield, seterrorfield] = React.useState(-1);\n  React.useEffect(() => {\n    setOpen(true);\n    console.log(fieldValues, \"fieldValues\");\n  }, []);\n  const classes = useStyles();\n\n  const handleTextFieldChange = (val, id) => {\n    switch (id) {\n      case \"effort\":\n        {\n          seteffort(val);\n          break;\n        }\n\n      case \"description\":\n        {\n          setdescription(val);\n          break;\n        }\n\n      case \"assyst\":\n        {\n          setassyst(val);\n          break;\n        }\n\n      default:\n        break;\n    }\n  };\n\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n      borderRadius: 3,\n      border: 0,\n      color: \"white\",\n      height: 48,\n      padding: \"0 30px\",\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\"\n    },\n    label: {\n      textTransform: \"capitalize\"\n    }\n  })(Button);\n\n  const getValue = (type, index) => {\n    switch (index) {\n      case 0:\n        {\n          return effort;\n        }\n\n      case 1:\n        {\n          return description;\n        }\n\n      case 2:\n        {\n          return assyst;\n        }\n    }\n  };\n\n  const getErrorMsg = () => {\n    switch (errorfield) {\n      case 0:\n        return \"Enter Valid Name !\";\n\n      case 1:\n        return \"Enter Valid Number !\";\n\n      case 2:\n        return \"Enter Valid Password !\";\n\n      case 3:\n        return \"Enter Same Password !\";\n\n      case 4:\n        return \"Enter Valid Email\";\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    onClose: () => {\n      setOpen(false);\n      setEditRowId(false);\n    },\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    style: {\n      background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }\n  }, fieldValues ? \" Edit Record\" : \"Add Records\"), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.rootregister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 11\n    }\n  }, stringConstants.EDIT_POPUP.map((object, index) => /*#__PURE__*/React.createElement(TextField, {\n    key: index,\n    id: object.id,\n    type: object.type,\n    error: index === errorfield ? true : 0,\n    helperText: index === errorfield ? getErrorMsg() : \"\",\n    required: object.id === 'assyst' ? false : true,\n    label: object.label,\n    color: \"primary\",\n    onChange: e => handleTextFieldChange(e.target.value, object.id),\n    value: getValue(object, index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    className: classesSelect.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, \"Service Element\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: serviceElement,\n    onChange: e => setserviceElement(e.target.value),\n    name: \"age\",\n    inputProps: {\n      id: \"age-native-required\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, stringConstants.SERVICE_ELEMENT.map(obj => /*#__PURE__*/React.createElement(\"option\", {\n    value: obj.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 22\n    }\n  }, obj.label))), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  }, \"Required\")), /*#__PURE__*/React.createElement(FormControl, {\n    required: true,\n    className: classesSelect.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    htmlFor: \"age-native-required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 15\n    }\n  }, \"Activity  Type\\u2009\"), /*#__PURE__*/React.createElement(Select, {\n    native: true,\n    value: activityType,\n    onChange: e => setactivityType(e.target.value),\n    name: \"age\",\n    inputProps: {\n      id: \"age-native-required\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 15\n    }\n  }, stringConstants.ACTIVITYTYPE.map(obj => /*#__PURE__*/React.createElement(\"option\", {\n    value: obj.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 22\n    }\n  }, obj.label))), /*#__PURE__*/React.createElement(FormHelperText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 15\n    }\n  }, \"Required\")))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: fieldValues ? 6 : 12,\n    lg: fieldValues ? 6 : 12,\n    sm: 6,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledButton, {\n    onClick: () => {\n      if (effort && description && activityType && serviceElement) handleAddUpdate(effort, description, activityType, serviceElement, assyst, effortId);else getErrorMsg();\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, fieldValues ? \"Update\" : \"Add\")), fieldValues && /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    lg: 6,\n    sm: 6,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    alignContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledButton, {\n    color: \"primary\",\n    onClick: e => {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 19\n    }\n  }, \"Delete\")))))));\n}\n\nexport default UpdateRecordPopup;","map":{"version":3,"sources":["/Users/mallik/projects/Effort-tracker/src/UpdateRecordPopup.js"],"names":["React","withStyles","Button","Dialog","Slide","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","Grid","TextField","stringConstants","useStyles","loginUser","makeStyles","Select","InputLabel","FormHelperText","FormControl","useStylesselect","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","styles","root","padding","DialogTitle","props","children","classes","onClose","other","closeButton","DialogContent","DialogActions","UpdateRecordPopup","classesSelect","editRowId","fieldValues","open","setOpen","setEditRowId","handleAddUpdate","effortId","seteffortId","useState","effort","seteffort","description","setdescription","activityType","setactivityType","serviceElement","setserviceElement","assyst","setassyst","errorfield","seterrorfield","useEffect","console","log","handleTextFieldChange","val","id","StyledButton","background","borderRadius","border","color","height","boxShadow","label","textTransform","getValue","type","index","getErrorMsg","rootregister","EDIT_POPUP","map","object","e","target","value","SERVICE_ELEMENT","obj","ACTIVITYTYPE"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport { Dialog, Slide } from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { Typography, Grid, TextField } from \"@material-ui/core\";\nimport stringConstants from \"./stringConstants.jsx\";\n\nimport useStyles from \"./styles.jsx\";\n\nimport { loginUser } from \"./service.js\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Select from \"@material-ui/core/Select\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\n\n\n\nconst useStylesselect = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nfunction UpdateRecordPopup(props) {\n  const classesSelect = useStylesselect();\n\n  const { editRowId: fieldValues, open, setOpen, setEditRowId , handleAddUpdate} = props;\n\n  const [effortId, seteffortId] = React.useState(\n    fieldValues ? fieldValues[\"id\"] : \"\"\n  );\n\n  const [effort, seteffort] = React.useState(\n    fieldValues ? fieldValues[\"effort\"] : \"\"\n  );\n  const [description, setdescription] = React.useState(\n    fieldValues ? fieldValues[\"description\"] : \"\"\n  );\n  const [activityType, setactivityType] = React.useState(\n    fieldValues ? fieldValues[\"activityType\"] : \"core\"\n  );\n  const [serviceElement, setserviceElement] = React.useState(\n    fieldValues ? fieldValues[\"serviceElement\"] : \"Change Management\"\n  );\n  const [assyst, setassyst] = React.useState(\n    fieldValues ? fieldValues[\"assyst\"] : \"\"\n  );\n\n  const [errorfield, seterrorfield] = React.useState(-1);\n\n\n  React.useEffect(() => {\n    setOpen(true);\n    console.log(fieldValues, \"fieldValues\");\n  }, []);\n\n  const classes = useStyles();\n\n  const handleTextFieldChange = (val, id) => {\n    switch (id) {\n      case \"effort\": {\n        seteffort(val);\n        break;\n      }\n      case \"description\": {\n        setdescription(val);\n        break;\n      }\n      case \"assyst\": {\n        setassyst(val);\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  const StyledButton = withStyles({\n    root: {\n      background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n      borderRadius: 3,\n      border: 0,\n      color: \"white\",\n      height: 48,\n      padding: \"0 30px\",\n      boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n    },\n    label: {\n      textTransform: \"capitalize\",\n    },\n  })(Button);\n\n  const getValue = (type, index) => {\n    switch (index) {\n      case 0: {\n        return effort;\n      }\n      case 1: {\n        return description;\n      }\n      case 2: {\n        return assyst;\n      }\n    }\n  };\n\n  const getErrorMsg = () => {\n    switch (errorfield) {\n      case 0:\n        return \"Enter Valid Name !\";\n      case 1:\n        return \"Enter Valid Number !\";\n      case 2:\n        return \"Enter Valid Password !\";\n      case 3:\n        return \"Enter Same Password !\";\n      case 4:\n        return \"Enter Valid Email\";\n    }\n  };\n\n \n  return (\n    <div>\n      <Dialog\n        onClose={() => {\n          setOpen(false);\n          setEditRowId(false);\n        }}\n        aria-labelledby=\"customized-dialog-title\"\n        open={open}\n      >\n        <DialogTitle\n          id=\"customized-dialog-title\"\n          style={{\n            background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\n          }}\n        >\n          {fieldValues ? \" Edit Record\" : \"Add Records\"}\n        </DialogTitle>\n\n        <DialogContent dividers>\n          <form className={classes.rootregister}>\n            {stringConstants.EDIT_POPUP.map((object, index) => (\n              <TextField\n                key={index}\n                id={object.id}\n                type={object.type}\n                error={index === errorfield ? true : 0}\n                helperText={index === errorfield ? getErrorMsg() : \"\"}\n                required= {object.id==='assyst' ? false : true}\n                label={object.label}\n                color=\"primary\"\n                onChange={(e) =>\n                  handleTextFieldChange(e.target.value, object.id)\n                }\n                value={getValue(object, index)}\n              />\n            ))}\n            <FormControl required className={classesSelect.formControl}>\n              <InputLabel htmlFor=\"age-native-required\">\n                Service Element\n              </InputLabel>\n              <Select\n                native\n                value={serviceElement}\n                onChange={(e) => setserviceElement(e.target.value)}\n                name=\"age\"\n                inputProps={{\n                  id: \"age-native-required\",\n                }}\n              >\n                {\n                stringConstants.SERVICE_ELEMENT.map(obj => \n                     <option value={obj.id}>{obj.label}</option>\n                )}\n              </Select>\n              <FormHelperText>Required</FormHelperText>\n            </FormControl>\n\n            <FormControl required className={classesSelect.formControl}>\n              <InputLabel htmlFor=\"age-native-required\">\n                Activity  Type \n              </InputLabel>\n              <Select\n                native\n                value={activityType}\n                onChange={(e) => setactivityType(e.target.value)}\n                name=\"age\"\n                inputProps={{\n                  id: \"age-native-required\",\n                }}\n              >\n               {\n                stringConstants.ACTIVITYTYPE.map(obj => \n                     <option value={obj.id}>{obj.label}</option>\n                )}\n              </Select>\n              <FormHelperText>Required</FormHelperText>\n            </FormControl>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Grid container>\n            <Grid\n              item\n              md={fieldValues ? 6 : 12}\n              lg={fieldValues ? 6 : 12}\n              sm={6}\n              xs={6}\n            >\n\n\n              <StyledButton\n                onClick={() => {\n\n                  if(effort && description && activityType && serviceElement )\n                       handleAddUpdate(effort,description,activityType,serviceElement,assyst , effortId   );\n                  else\n                    getErrorMsg()\n                }}\n                color=\"primary\"\n              >\n                {fieldValues ? \"Update\" : \"Add\"}\n              </StyledButton>\n            </Grid>\n\n            {fieldValues && (\n              <Grid item md={6} lg={6} sm={6} xs={6}>\n                <Grid container justify=\"flex-end\" alignContent=\"center\">\n                  <StyledButton\n                    color=\"primary\"\n                    onClick={(e) => {\n                \n                    }}\n                  >\n                    Delete\n                  </StyledButton>\n                </Grid>\n              </Grid>\n            )}\n          </Grid>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default UpdateRecordPopup;\n"]},"metadata":{},"sourceType":"module"}