{"ast":null,"code":"var _jsxFileName = \"/Users/mallik/projects/Effort-tracker/src/Register.jsx\";\nimport React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, Slide } from '@material-ui/core';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Typography, Grid, TextField } from '@material-ui/core';\nimport stringConstants from './stringConstants.jsx';\nimport useStyles from './styles.jsx';\nimport { loginUser } from './service.js';\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2)\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const {\n    children,\n    classes,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/React.createElement(MuiDialogTitle, Object.assign({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, children), onClose ? /*#__PURE__*/React.createElement(IconButton, {\n    \"aria-label\": \"close\",\n    className: classes.closeButton,\n    onClick: onClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  })) : null);\n});\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiDialogContent);\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1)\n  }\n}))(MuiDialogActions);\n\nfunction Register(props) {\n  const [open, setOpen] = React.useState(' ');\n  const [name, setname] = React.useState(' ');\n  const [phone, setphone] = React.useState(' ');\n  const [password, setpassword] = React.useState(' ');\n  const [confirmpassword, setconfirmpassword] = React.useState(' ');\n  const [gmail, setgmail] = React.useState(' ');\n  const [company, setcompany] = React.useState(' ');\n  const [address, setaddress] = React.useState(' ');\n  const [errorfield, seterrorfield] = React.useState(-1);\n  const [login, setlogin] = React.useState(false);\n  const [pageNumber, setPageNumber] = React.useState(0);\n  const {\n    setUserEffort\n  } = props;\n  React.useEffect(() => setOpen(true), []);\n  const classes = useStyles();\n\n  const handleTextFieldChange = (val, type) => {\n    switch (type) {\n      case \"Name\":\n        {\n          setname(val);\n          break;\n        }\n\n      case \"Phone\":\n        {\n          setphone(val);\n          break;\n        }\n\n      case \"Gmail\":\n        {\n          setgmail(val);\n          break;\n        }\n\n      case \"password\":\n        {\n          setpassword(val);\n          break;\n        }\n\n      case \"confirmpassword\":\n        {\n          setconfirmpassword(val);\n          break;\n        }\n\n      case \"Company Name\":\n        {\n          setcompany(val);\n          break;\n        }\n\n      case \"ADDRESS\":\n        {\n          setaddress(val);\n          break;\n        }\n\n      default:\n        break;\n    }\n  };\n\n  const handleLogin = () => {\n    if (!pageNumber) setPageNumber(1);else {\n      if (!name || name.length < 4) seterrorfield(0);else if (!phone || phone.length < 4) seterrorfield(1);else {}\n    }\n  };\n\n  const handleRegister = type => {\n    if (pageNumber) setPageNumber(0);\n    if (!name || name.length < 4) seterrorfield(0);else if (!phone || phone.length < 4) seterrorfield(1);else if (!gmail || gmail.length < 4) seterrorfield(4);else if (!company || company.length < 4) seterrorfield(5);else if (!address || address.length < 4) seterrorfield(6);else if (name && phone && type == 'register') {} // let getRegister = props.registered;\n    // var error = false;\n    // getRegister.forEach(e => {\n    //     if (e.gmail === gmail || e.phone === phone) {\n    //         if (e.gmail === gmail) seterrorfield(4)\n    //         else if (e.phone === phone) seterrorfield(1)\n    //         error = true;\n    //         return;\n    //     }\n    // })\n    // if (!error) {\n    //     let arr = {\n    //         'phone': phone,\n    //         'name': name,\n    //         'password': password,\n    //         'gmail': gmail,\n    //         'company': company,\n    //         'address': address\n    //     };\n    //     getRegister.push(arr);\n    //     props.setRegister(getRegister)\n    //     let a = [];\n    //     a.push(arr)\n    //     props.isLoggedIn(a)\n    // }\n    // if (name &&  password && (type == 'login')) {\n    // }\n  };\n\n  const StyledButton = withStyles({\n    root: {\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n      borderRadius: 3,\n      border: 0,\n      color: 'white',\n      height: 48,\n      padding: '0 30px',\n      boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)'\n    },\n    label: {\n      textTransform: 'capitalize'\n    }\n  })(Button);\n\n  const getValue = (type, index) => {\n    if (type === 'register') switch (index) {\n      case \"0\":\n        {\n          return name;\n        }\n\n      case \"1\":\n        {\n          return phone;\n        }\n\n      case \"2\":\n        {\n          return password;\n        }\n\n      case \"3\":\n        {\n          return confirmpassword;\n        }\n\n      case \"4\":\n        {\n          return gmail;\n        }\n\n      case \"5\":\n        {\n          return company;\n        }\n\n      case \"5\":\n        {\n          return address;\n        }\n    } else switch (index) {\n      case \"0\":\n        {\n          return name;\n        }\n\n      case \"1\":\n        {\n          return password;\n        }\n    }\n  };\n\n  const getErrorMsg = () => {\n    switch (errorfield) {\n      case 0:\n        return 'Enter Valid Name !';\n\n      case 1:\n        return 'Enter Valid Number !';\n\n      case 2:\n        return 'Enter Valid Password !';\n\n      case 3:\n        return 'Enter Same Password !';\n\n      case 4:\n        return 'Enter Valid Email';\n\n      case 5:\n        return 'Enter Valid Company';\n\n      case 6:\n        return 'Enter Valid Address';\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dialog, {\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"customized-dialog-title\",\n    style: {\n      background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }\n  }, !login ? 'Register' : 'Login', \"       Yourself !\"), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.rootregister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  }, !pageNumber ? stringConstants.REGISTERFIELDS.map((ind, index) => /*#__PURE__*/React.createElement(TextField, {\n    key: index,\n    id: ind.id,\n    type: ind.type,\n    error: index === errorfield ? true : 0,\n    helperText: index === errorfield ? getErrorMsg() : '',\n    required: true,\n    label: ind.label,\n    color: \"primary\",\n    onChange: e => handleTextFieldChange(e.target.value, ind.id),\n    value: getValue('register', index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 91\n    }\n  })) : stringConstants.LOGINFIELDS.map((ind, index) => /*#__PURE__*/React.createElement(TextField, {\n    key: index,\n    id: ind.id,\n    type: ind.type,\n    error: index === errorfield ? true : 0,\n    helperText: index === errorfield ? 'Username or Password is Wrong' : '',\n    required: true,\n    label: ind.label,\n    color: \"primary\",\n    onChange: e => handleTextFieldChange(e.target.value, ind.id),\n    value: getValue('login', index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 77\n    }\n  })))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    lg: 6,\n    sm: 6,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(StyledButton, {\n    onClick: () => {\n      setlogin(false);\n      handleRegister();\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 29\n    }\n  }, \"Register\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    md: 6,\n    lg: 6,\n    sm: 6,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    alignContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(StyledButton, {\n    color: \"primary\",\n    onClick: e => {\n      setlogin(true);\n      handleLogin();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 33\n    }\n  }, !login ? 'Existing user' : '', \"  Login\")))))));\n}\n\nexport default Register;","map":{"version":3,"sources":["/Users/mallik/projects/Effort-tracker/src/Register.jsx"],"names":["React","withStyles","Button","Dialog","Slide","MuiDialogTitle","MuiDialogContent","MuiDialogActions","IconButton","CloseIcon","Typography","Grid","TextField","stringConstants","useStyles","loginUser","styles","theme","root","margin","padding","spacing","DialogTitle","props","children","classes","onClose","other","closeButton","DialogContent","DialogActions","Register","open","setOpen","useState","name","setname","phone","setphone","password","setpassword","confirmpassword","setconfirmpassword","gmail","setgmail","company","setcompany","address","setaddress","errorfield","seterrorfield","login","setlogin","pageNumber","setPageNumber","setUserEffort","useEffect","handleTextFieldChange","val","type","handleLogin","length","handleRegister","StyledButton","background","borderRadius","border","color","height","boxShadow","label","textTransform","getValue","index","getErrorMsg","rootregister","REGISTERFIELDS","map","ind","id","e","target","value","LOGINFIELDS"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, Slide } from '@material-ui/core';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Typography, Grid, TextField } from '@material-ui/core';\nimport stringConstants from './stringConstants.jsx';\n\nimport useStyles from './styles.jsx'\n\nimport {loginUser} from './service.js';\n\n\n\nconst styles = (theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(2),\n    },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n    const { children, classes, onClose, ...other } = props;\n    return (\n        <MuiDialogTitle disableTypography className={classes.root} {...other}>\n            <Typography variant=\"h6\">{children}</Typography>\n            {onClose ? (\n                <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n                    <CloseIcon />\n                </IconButton>\n            ) : null}\n        </MuiDialogTitle>\n    );\n});\n\nconst DialogContent = withStyles((theme) => ({\n    root: {\n        padding: theme.spacing(2),\n    },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n    root: {\n        margin: 0,\n        padding: theme.spacing(1),\n    },\n}))(MuiDialogActions);\n\n\nfunction Register(props) {\n\n    const [open, setOpen] = React.useState( ' ');\n    const [name, setname] = React.useState( ' ');\n    const [phone, setphone] = React.useState( ' ');\n    const [password, setpassword] = React.useState( ' ');\n    const [confirmpassword, setconfirmpassword] = React.useState( ' ');\n    const [gmail, setgmail] = React.useState( ' ');\n    const [company, setcompany] = React.useState( ' ');\n    const [address, setaddress] = React.useState( ' ');\n    const [errorfield, seterrorfield] = React.useState(-1);\n    const [login, setlogin] = React.useState(false);\n\n\n    const [pageNumber, setPageNumber] = React.useState(0);\n\n    const {setUserEffort} = props\n\n\n    React.useEffect(() => setOpen(true), [])\n\n    const classes = useStyles();\n\n\n    const handleTextFieldChange = (val, type) => {\n        switch (type) {\n            case \"Name\": { setname(val); break; }\n            case \"Phone\": { setphone(val); break; }\n            case \"Gmail\": { setgmail(val); break; }\n            case \"password\": { setpassword(val); break; }\n            case \"confirmpassword\": { setconfirmpassword(val); break; }\n            case \"Company Name\": { setcompany(val); break; }\n            case \"ADDRESS\": { setaddress(val); break; }\n            default:\n                break;\n        }\n    }\n\n    const handleLogin = () => {\n\n        if(!pageNumber) setPageNumber(1);\n\n        else{\n\n            if (!name || name.length < 4)\n               seterrorfield(0)\n            else if (!phone || phone.length < 4)\n              seterrorfield(1)\n            else{\n\n            }\n\n\n        }\n\n       \n\n    }\n\n    const handleRegister = (type) => {\n\n        if(pageNumber) setPageNumber(0)\n\n        if (!name || name.length < 4)\n            seterrorfield(0)\n        else if (!phone || phone.length < 4)\n            seterrorfield(1)\n        else if (!gmail || gmail.length < 4)\n            seterrorfield(4)\n        else if (!company || company.length < 4)\n            seterrorfield(5)\n        else if (!address || address.length < 4)\n            seterrorfield(6)\n        else if (name && phone && (type == 'register')) {\n            // let getRegister = props.registered;\n            // var error = false;\n            // getRegister.forEach(e => {\n            //     if (e.gmail === gmail || e.phone === phone) {\n            //         if (e.gmail === gmail) seterrorfield(4)\n            //         else if (e.phone === phone) seterrorfield(1)\n            //         error = true;\n            //         return;\n            //     }\n            // })\n            // if (!error) {\n            //     let arr = {\n            //         'phone': phone,\n            //         'name': name,\n            //         'password': password,\n            //         'gmail': gmail,\n            //         'company': company,\n            //         'address': address\n            //     };\n               \n            //     getRegister.push(arr);\n            //     props.setRegister(getRegister)\n            //     let a = [];\n            //     a.push(arr)\n            //     props.isLoggedIn(a)\n            // }\n        }\n        // if (name &&  password && (type == 'login')) {\n\n\n\n           \n\n         \n\n        // }\n    }\n\n    const StyledButton = withStyles({\n        root: {\n            background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n            borderRadius: 3,\n            border: 0,\n            color: 'white',\n            height: 48,\n            padding: '0 30px',\n            boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n        },\n        label: {\n            textTransform: 'capitalize',\n        },\n    })(Button);\n\n\n\n    const getValue = (type,index) => {\n\n        if(type === 'register')\n            switch(index){\n                case \"0\":{\n                    return name\n                }\n                case \"1\":{\n                    return phone\n                }\n                case \"2\":{\n                    return password\n                }\n                case \"3\":{\n                    return confirmpassword\n                }\n                case \"4\":{\n                    return gmail\n                }\n                case \"5\":{\n                    return company\n                }\n                case \"5\":{\n                    return address\n                }\n            }\n        else\n        switch(index){\n            case \"0\":{\n                return name\n            }\n            case \"1\":{\n                return password\n            }\n        }\n            \n\n    }\n\n    const getErrorMsg = () => {\n        switch(errorfield){\n            case  0 :return 'Enter Valid Name !'\n            case  1 :return 'Enter Valid Number !'\n            case  2 :return 'Enter Valid Password !'\n            case  3 :return 'Enter Same Password !'\n            case  4 :return 'Enter Valid Email'\n            case  5 :return 'Enter Valid Company'\n            case  6 :return 'Enter Valid Address'\n        }\n    }\n\n\n    return (\n        <div>\n            <Dialog \n                aria-labelledby=\"customized-dialog-title\" open={open}>\n                <DialogTitle id=\"customized-dialog-title\" style={{ background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)' }} >\n                    {!login ? 'Register' : 'Login'}       Yourself !\n             </DialogTitle>\n\n                <DialogContent dividers>\n\n                    <form className={classes.rootregister}>\n\n                        {!pageNumber ? stringConstants.REGISTERFIELDS.map((ind, index) => <TextField key={index} id={ind.id} type={ind.type} error={index === errorfield ? true : 0}\n                            helperText={ (index === errorfield) ? getErrorMsg() : ''} required label={ind.label} color=\"primary\" onChange={(e) => handleTextFieldChange(e.target.value, ind.id)} \n                            value = {getValue('register',index)} />\n                        ) :\n                            stringConstants.LOGINFIELDS.map((ind, index) => <TextField key={index} id={ind.id} type={ind.type} error={index === errorfield ? true : 0}\n                                helperText={index === errorfield ? 'Username or Password is Wrong' : ''} required label={ind.label} color=\"primary\" onChange={(e) => handleTextFieldChange(e.target.value, ind.id)} \n                                value =  {getValue('login',index)} />\n                            )\n\n                        }\n                    </form>\n                </DialogContent>\n                <DialogActions>\n\n                    <Grid container>\n                        <Grid item md={6} lg={6} sm={6} xs={6} >\n                            <StyledButton onClick={() => { setlogin(false);  handleRegister(); }} color=\"primary\">\n                                Register\n                     </StyledButton>\n                        </Grid>\n                        <Grid item md={6} lg={6} sm={6} xs={6} >\n                            <Grid container justify=\"flex-end\" alignContent=\"center\" >\n                                <StyledButton color=\"primary\" onClick={e => {  setlogin(true);  handleLogin() ;}}>\n                                    {!login ? 'Existing user' : ''}  Login\n                             </StyledButton>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n\n                </DialogActions>\n            </Dialog>\n\n        </div>\n    );\n}\n\n\n\nexport default (Register)\n"]},"metadata":{},"sourceType":"module"}